# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: tests

on:
  push:
    branches:
      - main
      - npe2
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
      - npe2
  workflow_dispatch:

jobs:
  build_wheels_macos:
    name: Build wheels on MacOS
    runs-on: macos-11
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Setup OpenMP
        run: brew install libomp
        env:
          CC: /usr/bin/clang
          CXX: /usr/bin/clang++
          CPPFLAGS: "-Xpreprocessor -fopenmp"
          CFLAGS: "-Wno-implicit-function-declaration -I/usr/local/opt/libomp/include"
          CXXFLAGS: "-I/usr/local/opt/libomp/include"
          LDFLAGS: "-Wl,-rpath,/usr/local/opt/libomp/lib -L/usr/local/opt/libomp/lib -lomp"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.2

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_wheels_linux:
    name: Build wheels on Linux
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.2

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_wheels_windows:
    name: Build wheels on Windows
    runs-on: windows-2019
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.2

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels_macos, build_wheels_linux, build_wheels_windows, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          password: ${{ secrets.TWINE_API_KEY }}
          # To test: repository_url: https://test.pypi.org/legacy/